#= Template file for "Mkinclude", build configuration of deepconv
#
# Authors::   SUGIYAMA Ko-ichiro, Masatsugu ODAKA
# Version::   $Id: Mkinclude.in,v 1.2 2011-06-14 02:14:22 sugiyama Exp $
# Tag Name::  $Name:  $
# Copyright:: Copyright (C) GFD Dennou Club, 2006. All rights reserved.
# License::   See COPYRIGHT[link:COPYRIGHT]
#
# == History
# 
# * 2006/09/28 (ODAKA Masatsugu   )
# * 2006/09/12 (ODAKA Masatsugu   )
# * 2005/01/27 (ODAKA Masatsugu   )
# * 2005/04/21 (SUGIYAMA Ko-ichiro)
# * 2004/08/13 (SUGIYAMA Ko-ichiro)
#
############################################################
#== インストールディレクトリ
#
# [JAPANESE] 
#
DESTDIR = 


########################################################################
#
# set commands		: [JA] コマンド設定
#

############################################################
#== Fortran Compiler
#
# [JAPANESE] Fortran コンパイラ
#
FC=ftn

CPP=gcc
CPPFLAGS=-DLIB_MPI

# Flags needed when compiled and linked
# [JAPANESE] コンパイル時・リンク時に必要なフラグ

# fp0, fp1 => fp_trap
# fp2 => nofp_trap

###SYSFFLAGS=-em -O0 -h flex_mp=intolerant $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR) 
SYSFFLAGS=-em -O3 -h noautothread -h noomp -h flex_mp=strict -h ipa4 $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)


#SYSFFLAGS=-em -O3 -h noautothread -h noomp -h fp0 -h flex_mp=intolerant -h ipa4 $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)  -h display_opt
#SYSFFLAGS=-em -O3 -h noautothread -h noomp -h fp1 -h flex_mp=intolerant -h ipa4 $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)  -h display_opt
#SYSFFLAGS=-em -O3 -h noautothread -h noomp -h fp2 -h flex_mp=intolerant -h ipa4 $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)  -h display_opt

#SYSFFLAGS=-em -O3 -h noautothread -h noomp -h fp0 -h flex_mp=strict -h ipa4 $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)  -h display_opt
#SYSFFLAGS=-em -O3 -h noautothread -h noomp -h fp1 -h flex_mp=strict -h ipa4 $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)  -h display_opt
#SYSFFLAGS=-em -O3 -h noautothread -h noomp -h fp2 -h flex_mp=strict -h ipa4 $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)  -h display_opt

#SYSFFLAGS=-em -O3 -h noautothread -h noomp -h fp0 -h flex_mp=conservative -h ipa4 $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)  -h display_opt
#SYSFFLAGS=-em -O3 -h noautothread -h noomp -h fp1 -h flex_mp=conservative -h ipa4 $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)  -h display_opt
#SYSFFLAGS=-em -O3 -h noautothread -h noomp -h fp2 -h flex_mp=conservative -h ipa4 $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)  -h display_opt

#SYSFFLAGS=-em -O3 -h noautothread -h noomp -h fp0 -h nofp_trap -h flex_mp=intolerant -h ipa4 $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)  -h display_opt
#SYSFFLAGS=-em -O3 -h noautothread -h noomp -h fp1 -h nofp_trap -h flex_mp=intolerant -h ipa4 $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)  -h display_opt
#SYSFFLAGS=-em -O3 -h noautothread -h noomp -h fp2 -h nofp_trap -h flex_mp=intolerant -h ipa4 $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)  -h display_opt

#SYSFFLAGS=-em -O1 -h noautothread -h noomp -h fp1 -h flex_mp=intolerant -h ipa2 $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)  -h display_opt 
#SYSFFLAGS=-em -O2 -h noautothread -h noomp -h fp1 -h flex_mp=intolerant -h ipa2 $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)  -h display_opt # -O3 と同じ事になっているはず
#SYSFFLAGS=-em -O3 -h noautothread -h noomp -h fp1 -h flex_mp=intolerant -h ipa2 $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)  -h display_opt

#SYSFFLAGS=-em -O1 -h noautothread -h noomp -h fp1 -h flex_mp=intolerant -h ipa3 $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)  -h display_opt 
#SYSFFLAGS=-em -O2 -h noautothread -h noomp -h fp1 -h flex_mp=intolerant -h ipa3 $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)  -h display_opt # -O3 と同じ事になっているはず
#SYSFFLAGS=-em -O3 -h noautothread -h noomp -h fp1 -h flex_mp=intolerant -h ipa3 $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)  -h display_opt

#SYSFFLAGS=-em -O1 -h noautothread -h noomp -h fp1 -h flex_mp=intolerant -h ipa4 $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)  -h display_opt 
#SYSFFLAGS=-em -O2 -h noautothread -h noomp -h fp1 -h flex_mp=intolerant -h ipa4 $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)  -h display_opt # -O3 と同じ事になっているはず

#SYSFFLAGS=-em -O1 -h noautothread -h noomp -h fp1 -h flex_mp=strict -h ipa4 $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)  -h display_opt
#SYSFFLAGS=-em -O2 -h noautothread -h noomp -h fp1 -h flex_mp=strict -h ipa4 $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)  -h display_opt

#SYSFFLAGS=-em -O1 -h noautothread -h noomp -h fp1 -h flex_mp=conservative -h ipa4 $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)  -h display_opt
#SYSFFLAGS=-em -O2 -h noautothread -h noomp -h fp1 -h flex_mp=conservative -h ipa4 $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)  -h display_opt

#SYSFFLAGS=-em -O3 -h noautothread -h noomp -h fp0 -h flex_mp=intolerant -h ipa4 -h nofp_trap $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)  -h display_opt
#SYSFFLAGS=-em -O3 -h noautothread -h noomp -h fp1 -h flex_mp=intolerant -h ipa4 -h nofp_trap $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)  -h display_opt

#SYSFFLAGS=-em -O3 -h noautothread -h noomp -h fp0 -h flex_mp=strict -h ipa4 -h nofp_trap $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)  -h display_opt
#SYSFFLAGS=-em -O3 -h noautothread -h noomp -h fp1 -h flex_mp=strict -h ipa4 -h nofp_trap $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)  -h display_opt

#SYSFFLAGS=-em -O1 -h noautothread -h noomp -h fp1 -h flex_mp=strict -h ipa4 -h nofp_trap $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)  -h display_opt
#SYSFFLAGS=-em -O2 -h noautothread -h noomp -h fp2 -h flex_mp=strict -h ipa4 -h nofp_trap $(INCLUDE_GT) $(INCLUDES) -I$(MODDIR)  -h display_opt

 
# Flags needed when linked
# [JAPANESE] リンク時に必要なフラグ
SYSLDFLAGS=$(SYSFFLAGS) -L/home/sugiymki/local/lib

# Libraries needed when linked
# [JAPANESE] リンク時に必要なライブラリ
#SYSLDLIBS=-lgtool5   
SYSLDLIBS=-lgtool5 -lnetcdf -lnetcdff 

# Linker which includes flags
# [JAPANESE] リンカコマンド
LINKF=$(FC) $(SYSFFLAGS)  $(INCLUDE_GT) $(SYSFFLAGS) $(INCLUDES)

# Host type
# [JAPANESE] ホストシステムのタイプ
HOST_CPU=x86_64

# Cross-compile
# [JAPANESE] クロスコンパイル
CROSS_COMPILING=no

# Information of Modules (std.mod, HP.mod, fqs.mod, intel.d, hitachi.f90)
# [JAPANESE] モジュール情報の渡し方
F90MODTYPE=hitachi.f90

# Flag for module files search path
# [JAPANESE] モジュール情報ファイルへのパスを指定するためのフラグ
MODPATHFLAG=-I

# Extensions of Module Files (".mod" or ".d" or ".f90")
# [JAPANESE] モジュール情報ファイルの拡張子
MODEXT=.f90
#
# Extensions of Module Files used when "make clean"
# * if "F90MODTYPE = hitachi.f90", clean nothing.
#
# [JAPANESE]
# make clean 時に使用するモジュール情報ファイル指定
# (F90MODTYPE = hitachi.f90 のときは何も消してはならない)
#
MODS=


INCLUDE_GT=-I/home/sugiymki/local/include


############################################################
#== Directory to which the all files are installed
#
# [JAPANESE] インストール先のディレクトリ
#
prefix=/home/sugiymki/usr
exec_prefix=${prefix}
deepconvbinsuffix=

DEST_LIB=$(DESTDIR)${exec_prefix}/lib
DEST_INC=$(DESTDIR)${prefix}/include
DEST_BIN=$(DESTDIR)${exec_prefix}/bin
DEST_DOC=$(DESTDIR)${prefix}/doc

#== Editor for module information (Used when "F90MODTYPE=intel.d")
IFCCEM=:


############################################################
#== deepconv library name lib$(LIBNAME).a
#
# [JAPANESE] ライブラリ名 lib$(LIBNAME).a
#
LIBNAME=arare

############################################################
#== SYSDEPABORT, SYSDEPARG: system dependent routine
#
# [JAPANESE] システム依存系のルーチン
#
SYSDEPABORT=abort
SYSDEPARG=@SYSDEPARG@

############################################################
#== Directory to which the all files are compiled
#
# [JAPANESE] コンパイルを行うディレクトリ
#
DEEPCONVDIR=/home/sugiymki/work/deepconv/arare6-20150509

# SRCDIR    
# [JAPANESE] deepconv ソース格納ディレクトリ
SRCDIR    = $(DEEPCONVDIR)/src

# LIBDIR    
# [JAPANESE] deepconv ライブラリ格納ディレクトリ
LIBDIR    = $(DEEPCONVDIR)/lib

# MODDIR    
# [JAPANESE] deepconv モジュール情報格納ディレクトリ
MODDIR    = $(DEEPCONVDIR)/include

# BINDIR    
# [JAPANESE] deepconv コマンド格納ディレクトリ
BINDIR    = $(DEEPCONVDIR)/bin

# DOCDIR    
# [JAPANESE] deepconv ドキュメント格納ディレクトリ
DOCDIR    = $(DEEPCONVDIR)/doc


############################################################
#== Set Commands for compile and install source code
#
# Please edit according to your system.
#
# [JAPANESE] コンパイルやインストールに必要なコマンド群
#
# システムに合わせて変更してください.
#
MV         = mv
CP         = cp -p
INSTALL    = install -m 644
INSTALLBIN = install -m 755
INSTALLDIR = install -d -m 755
MKDIR      = mkdir
RM         = rm
RMDIR      = rmdir
TAGS       = etags
MAKE       = make        # make
AR         = ar          # AR : Library builder specification
ARFLAGS    = cru     # flags of AR
RANLIB     = ranlib      # generate index to archivea
NCDUMP     = ncdump      # netCDF file dump command
PERL       = perl          # for Generation of dependency file
RUBY       = ruby          # for Generation of f90 code and documentations
RD2        = rd2           # for Generation of RD documentations
RDOC       = rdoc          # for Generation of RDoc documentations
LN         = ln

#
# set Linear Algebra Library	: [JA] 行列計算ライブラリの指定
#
LINSOLV = lapack

